name: wokwi
# either manually started, or on a schedule
on: [ push, workflow_dispatch ]
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  xls:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 1
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
      - name: setup miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: tinytapeout
          channel-priority: strict
          environment-file: environment.yml
          use-only-tar-bz2: true
      - name: update path
        shell: bash -l {0}
        run: |
          echo $CONDA/envs/tinytapeout/bin >> $GITHUB_PATH
      - name: generate rtl
        run: make generate
      - name: populate rtl cache
        uses: actions/cache@v2
        with:
          path: src
          key: ${{ runner.os }}-rtl-${{ hashFiles('src/user_module.v') }}        

  gds:
    needs: xls
    env:
      OPENLANE_TAG:   2022.02.23_02.50.41
      OPENLANE_IMAGE_NAME:    efabless/openlane:$(OPENLANE_TAG)
      OPENLANE_ROOT:  /home/runner/openlane
      PDK_ROOT:       /home/runner/pdk
      PDK:            sky130A

    # ubuntu
    runs-on: ubuntu-latest
    steps:
    # need the repo checked out
    - name: checkout repo
      uses: actions/checkout@v2

    - name: checkout caravel_user_project
      uses: actions/checkout@v2
      with:
        repository: efabless/caravel_user_project
        ref: mpw-6c
        path: caravel_user_project

    - name: pdk & caravel
      run: |
        cd caravel_user_project
        make setup

    - name: restore rtl cache
      uses: actions/cache@v2
      with:
        path: src
        key: ${{ runner.os }}-rtl-${{ hashFiles('src/user_module.v') }}

    - name: generate user module
      run: make fetch

    - name: make GDS
      run: make harden

    - name: populate src cache
      uses: actions/cache@v2
      with:
        path: src
        key: ${{ runner.os }}-src-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}

    - name: populate runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: ${{ runner.os }}-runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}

  svg:
    needs: gds
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v4
    - name: install deps
      uses: py-actions/py-dependency-install@v3
      with:
        path: 'requirements-svg.txt'    
    - name: restore runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: ${{ runner.os }}-runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: create svg
      run: python view.py
    - name: populate svg cache
      uses: actions/cache@v2
      with:
        path: gds_render.svg
        key: ${{ runner.os }}-runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
        
  webgl:
    needs: gds
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v2      
    - name: setup python
      uses: actions/setup-python@v4
    - name: install deps
      uses: py-actions/py-dependency-install@v3
      with:
        path: 'requirements-webgl.txt'    
    - name: restore runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: ${{ runner.os }}-runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    # make html gds viewer with GDS2WebGL
    - name: checkout repo
      uses: actions/checkout@v2
      with:
        repository: s-holst/GDS2WebGL
        path: GDS2WebGL
    - name: GDS2WebGL
      run: |
        cd GDS2WebGL
        python3 gds2webgl.py -i ../runs/wokwi/results/final/gds/*.gds -o ../index.html
    - name: populate webgl cache
      uses: actions/cache@v2
      with:
        path: gds.html
        key: ${{ runner.os }}-webgl-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
        
  artifact:
    needs:
    - gds
    runs-on: ubuntu-latest
    steps:
    - name: restore src cache
      uses: actions/cache@v2
      with:
        path: src
        key: ${{ runner.os }}-src-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: restore runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: ${{ runner.os }}-runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
          # path depends on the tag and the module name
          name: GDS
          path: |
            src/*
            runs/wokwi/results/final/*
            runs/wokwi/reports/final_summary_report.csv
  pages:
    needs:
    - svg
    - webgl
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: restore svg cache
      uses: actions/cache@v2
      with:
        path: svg
        key: ${{ runner.os }}-svg-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: restore webgl cache
      uses: actions/cache@v2
      with:
        path: webgl
        key: ${{ runner.os }}-webgl-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: Setup Pages
      uses: actions/configure-pages@v2
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: '.'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
