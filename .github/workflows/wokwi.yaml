name: wokwi
# either manually started, or on a schedule
on: [ push, workflow_dispatch ]
jobs:
  gds:
    env:
        OPENLANE_TAG:   2022.02.23_02.50.41
        OPENLANE_IMAGE_NAME:    efabless/openlane:$(OPENLANE_TAG)
        OPENLANE_ROOT:  /home/runner/openlane
        PDK_ROOT:       /home/runner/pdk
        PDK:            sky130A

    # ubuntu
    runs-on: ubuntu-latest
    steps:
    # need the repo checked out
    - name: checkout repo
      uses: actions/checkout@v2

    - name: cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 1
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}

    - name: setup miniconda
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        activate-environment: tinytapeout
        channel-priority: strict
        environment-file: environment.yml
        use-only-tar-bz2: true

    - name: update path
      shell: bash -l {0}
      run: |
        echo $CONDA/envs/tinytapeout/bin >> $GITHUB_PATH

    - name: generate verilog
      run: make generate

    # build PDK and fetch OpenLane
    - name: pdk & caravel
      run: |
        cd $HOME
        git clone https://github.com/efabless/caravel_user_project.git -b mpw-6c
        cd caravel_user_project
        make setup

    # fetch the Verilog from Wokwi API
    - name: convert to verilog
      run: make fetch

    # run the 'harden' rule in the Makefile to use OpenLane to build the GDS
    - name: make GDS
      run: make harden

    # for debugging, show all the files
    - name: show files
      run: find runs/wokwi/results

    - name: populate src cache
      uses: actions/cache@v2
      with:
        path: src
        key: src-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}

    - name: populate runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}

  svg:
    needs: gds
    runs-on: ubuntu-latest
    steps:
    - name: restore runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    # make the SVG
    - name: checkout repo
      uses: actions/checkout@v2
    - name: create svg
      run: python view.py
    - name: populate svg cache
      uses: actions/cache@v2
      with:
        path: gds_render.svg
        key: runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
        
  webgl:
    needs: gds
    runs-on: ubuntu-latest
    steps:
    - name: restore runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: checkout repo
      uses: actions/checkout@v2
      with:
        repository: s-holst/GDS2WebGL
    # make html gds viewer with GDS2WebGL
    - name: GDS2WebGL
      run: |
        python3 gds2webgl.py -i runs/wokwi/results/final/gds/*.gds -o gds.html
    - name: populate webgl cache
      uses: actions/cache@v2
      with:
        path: gds.html
        key: webgl-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
        
  deploy:
    needs:
      - gds
      - svg
      - webgl
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: restore src cache
      uses: actions/cache@v2
      with:
        path: src
        key: src-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: restore runs cache
      uses: actions/cache@v2
      with:
        path: runs
        key: runs-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: restore svg cache
      uses: actions/cache@v2
      with:
        path: svg
        key: svg-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: restore webgl cache
      uses: actions/cache@v2
      with:
        path: webgl
        key: webgl-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
          # path depends on the tag and the module name
          name: GDS
          path: |
            src/*
            runs/wokwi/results/final/*
            runs/wokwi/reports/final_summary_report.csv
            runs/wokwi/reports/synthesis/1-synthesis.stat.rpt.strategy4
            gds_render.svg
            gds.html
    - name: upload page artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: '.'
    - name: deploy to github pages
      id: deployment
      uses: actions/deploy-pages@v1
